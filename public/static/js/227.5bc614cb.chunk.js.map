{"version":3,"file":"static/js/227.5bc614cb.chunk.js","mappings":"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","sources":["shared/components/UIElements/Avatar.js","users/pages/UsersProfile.js","shared/Hooks/form-hook.js","shared/components/UIElements/Input.js","shared/components/UIElements/Card.js","shared/util/validators.js"],"sourcesContent":["import React from \"react\";\r\n\r\nimport \"./Avatar.css\";\r\n\r\nconst Avatar = (props) => {\r\n  return (\r\n    <div className=\"avatar-container\">\r\n      <img\r\n        className=\"avatar-img\"\r\n        src={props.image}\r\n        alt={props.alt}\r\n        style={{ width: props.width || 120, height: props.height || 120 }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  FaUserShield,\r\n  FaTasks,\r\n  FaUserFriends,\r\n  FaChartLine,\r\n  FaEye,\r\n  FaEyeSlash,\r\n} from \"react-icons/fa\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Input from \"../../shared/components/UIElements/Input\";\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n} from \"../../shared/util/validators\";\r\nimport { useForm } from \"../../shared/Hooks/form-hook\";\r\nimport Button from \"../../shared/components/UIElements/Button\";\r\nimport \"./UsersProfile.css\";\r\nimport Avatar from \"../../shared/components/UIElements/Avatar\";\r\nimport { useHttpClient } from \"../../shared/Hooks/http-hook\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport Modal from \"../../shared/components/UIElements/Modal\";\r\n\r\nconst UsersProfile = () => {\r\n  const [showConfirm, setShowConfirm] = useState(false);\r\n  const [showOldPassword, setShowOldPassword] = useState(false);\r\n  const [showNewPassword, setShowNewPassword] = useState(false);\r\n\r\n  const openConfirmHandler = () => setShowConfirm(true);\r\n  const closeConfirmHandler = () => setShowConfirm(false);\r\n\r\n  const auth = useContext(AuthContext);\r\n  const userId = useParams().userId;\r\n\r\n  const { isLoading, error, sendRequest, errorHandler } = useHttpClient();\r\n  const [profile, setProfile] = useState(null);\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      name: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      email: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      oldPassword: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      newPassword: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      image: {\r\n        value: \"\",\r\n        isValid: true,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchProfile = async () => {\r\n      try {\r\n        const userData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + `/users/${userId}/profile`,\r\n          \"GET\",\r\n          null,\r\n          {\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n        if (!userData || !userData.name || !userData.email) {\r\n          throw new Error(\"Invalid profile data received\");\r\n        }\r\n\r\n        setFormData(\r\n          {\r\n            name: { value: userData.name, isValid: true },\r\n            email: { value: userData.email, isValid: true },\r\n            image: { value: userData.image || \"\", isValid: true },\r\n            oldPassword: { value: \"\", isValid: true },\r\n            newPassword: { value: \"\", isValid: true },\r\n          },\r\n          true\r\n        );\r\n\r\n        setProfile(userData);\r\n      } catch (err) {\r\n        console.error(\"Error fetching profile:\", err);\r\n        setProfile(null);\r\n      }\r\n    };\r\n\r\n    if (userId && auth.token) {\r\n      fetchProfile();\r\n    } else {\r\n      console.error(\"Missing userId or auth token:\", {\r\n        userId,\r\n        hasToken: !!auth.token,\r\n      });\r\n    }\r\n  }, [sendRequest, setFormData, userId, auth.token]);\r\n\r\n  let updateUser;\r\n  const submitFormHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const formData = {\r\n        name: formState.inputs.name.value,\r\n        email: formState.inputs.email.value,\r\n        image: formState.inputs.image.value,\r\n      };\r\n\r\n      if (\r\n        formState.inputs.oldPassword.value &&\r\n        formState.inputs.newPassword.value\r\n      ) {\r\n        formData.oldPassword = formState.inputs.oldPassword.value;\r\n        formData.newPassword = formState.inputs.newPassword.value;\r\n      }\r\n\r\n      updateUser = await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + `/users/${userId}/profile`,\r\n        \"PATCH\",\r\n        JSON.stringify(formData),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n\r\n      if (!updateUser || !updateUser.name || !updateUser.email) {\r\n        throw new Error(\"Invalid update response received\");\r\n      }\r\n\r\n      setProfile(updateUser);\r\n\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          oldPassword: { value: \"\", isValid: true },\r\n          newPassword: { value: \"\", isValid: true },\r\n        },\r\n        true\r\n      );\r\n    } catch (err) {\r\n      console.error(\"Error updating profile:\", err);\r\n    }\r\n  };\r\n\r\n  const getTrustLevel = (taskCount) => {\r\n    if (taskCount >= 15) return { level: \"Expert\", color: \"#00b894\" };\r\n    if (taskCount >= 10) return { level: \"Advanced\", color: \"#0984e3\" };\r\n    if (taskCount >= 5) return { level: \"Intermediate\", color: \"#fdcb6e\" };\r\n    return { level: \"Beginner\", color: \"#e17055\" };\r\n  };\r\n\r\n  const trustLevel = getTrustLevel(profile?.totalTasksCount || 0);\r\n\r\n  if (!profile && !isLoading) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>Could not find profile!</h2>\r\n          <p>Please check if you are logged in correctly.</p>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const toggleOldPasswordVisibility = () => {\r\n    setShowOldPassword(!showOldPassword);\r\n  };\r\n\r\n  const toggleNewPasswordVisibility = () => {\r\n    setShowNewPassword(!showNewPassword);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={showConfirm}\r\n        header=\"Profile Updated Successfully!\"\r\n        footer={\r\n          <div className=\"update-footer\">\r\n            <Button inverse onClick={closeConfirmHandler}>\r\n              Close\r\n            </Button>\r\n          </div>\r\n        }\r\n      />\r\n\r\n      <ErrorModal error={error} onClear={errorHandler} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && profile && (\r\n        <div className=\"profile-container\">\r\n          <div className=\"profile-header\">\r\n            <h2>Welcome, {profile.name}</h2>\r\n            <div\r\n              className=\"trust-badge\"\r\n              style={{ backgroundColor: trustLevel.color }}\r\n            >\r\n              <FaUserShield />\r\n              <span>{trustLevel.level} User</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profile-content\">\r\n            <div className=\"profile-sidebar\">\r\n              <div className=\"profile-avatar-section\">\r\n                <Avatar\r\n                  image={\r\n                    profile.image\r\n                      ? process.env.REACT_APP_ASSET_URL + `/${profile.image}`\r\n                      : undefined\r\n                  }\r\n                  alt={profile.name}\r\n                />\r\n              </div>\r\n              <div className=\"profile-stats\">\r\n                <div className=\"stat-card\">\r\n                  <FaTasks />\r\n                  <h3>Total Tasks</h3>\r\n                  <p>{profile.totalTasksCount || 0}</p>\r\n                </div>\r\n                <div className=\"stat-card\">\r\n                  <FaUserFriends />\r\n                  <h3>Created Tasks</h3>\r\n                  <p>{profile.createdTasksCount || 0}</p>\r\n                </div>\r\n                <div className=\"stat-card\">\r\n                  <FaChartLine />\r\n                  <h3>Assigned Tasks</h3>\r\n                  <p>{profile.assignedTasksCount || 0}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"profile-form-section\">\r\n              <Card className=\"profile-form-card\">\r\n                <h3>Update Profile</h3>\r\n                <form onSubmit={submitFormHandler}>\r\n                  <Input\r\n                    id=\"name\"\r\n                    element=\"input\"\r\n                    label=\"Name\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    onInput={inputHandler}\r\n                    initialValue={profile.name}\r\n                    initialValid={true}\r\n                  />\r\n                  <Input\r\n                    id=\"email\"\r\n                    element=\"input\"\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    validators={[VALIDATOR_EMAIL()]}\r\n                    onInput={inputHandler}\r\n                    initialValue={profile.email}\r\n                    initialValid={true}\r\n                  />\r\n                  <div className=\"password-input-container\">\r\n                    <Input\r\n                      id=\"oldPassword\"\r\n                      element=\"input\"\r\n                      label=\"Old Password\"\r\n                      type={showOldPassword ? \"text\" : \"password\"}\r\n                      validators={[VALIDATOR_MINLENGTH(6)]}\r\n                      onInput={inputHandler}\r\n                      errorText=\"Enter your current password (min 6 characters)\"\r\n                    />\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"password-toggle-profile old-password-toggle\"\r\n                      onClick={toggleOldPasswordVisibility}\r\n                    >\r\n                      {showOldPassword ? <FaEyeSlash /> : <FaEye />}\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"password-input-container\">\r\n                    <Input\r\n                      id=\"newPassword\"\r\n                      element=\"input\"\r\n                      label=\"New Password\"\r\n                      type={showNewPassword ? \"text\" : \"password\"}\r\n                      validators={[VALIDATOR_MINLENGTH(6)]}\r\n                      onInput={inputHandler}\r\n                      errorText=\"Enter a new password (min 6 characters)\"\r\n                    />\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"password-toggle-profile new-password-toggle\"\r\n                      onClick={toggleNewPasswordVisibility}\r\n                    >\r\n                      {showNewPassword ? <FaEyeSlash /> : <FaEye />}\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"profile-actions\">\r\n                    <Button\r\n                      type=\"submit\"\r\n                      onClick={openConfirmHandler}\r\n                      disabled={!formState.isValid}\r\n                    >\r\n                      Update Profile\r\n                    </Button>\r\n                    <Button onClick={auth.logout} inverse>\r\n                      Logout\r\n                    </Button>\r\n                  </div>\r\n                </form>\r\n              </Card>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UsersProfile;\r\n","import { useReducer, useCallback } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity,\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formIsValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formIsValidity,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n","import React, { useReducer, useEffect } from \"react\";\r\n\r\nimport { validate, VALIDATOR_REQUIRE } from \"../../util/validators\";\r\nimport \"./Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.isValid),\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouch: true,\r\n      };\r\n    case \"RADIO_CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, VALIDATOR_REQUIRE()),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || \"\",\r\n    isTouch: false,\r\n    isValid: props.initialValid || false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    if (typeof onInput === \"function\") {\r\n      onInput(id, value, isValid);\r\n    }\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: \"TOUCH\",\r\n    });\r\n  };\r\n\r\n  const radioChangeHandler = (selectedValue) => {\r\n    dispatch({\r\n      type: \"RADIO_CHANGE\",\r\n      value: selectedValue,\r\n    });\r\n  };\r\n\r\n  const renderRadioOptions = (radioOptions) => {\r\n    return radioOptions.map((option) => (\r\n      <label key={option.value} className={option.className}>\r\n        <input\r\n          type=\"radio\"\r\n          name={option.id}\r\n          value={option.value}\r\n          checked={value === option.value}\r\n          onChange={() => radioChangeHandler(option.value)}\r\n          onBlur={touchHandler}\r\n        />\r\n        <span className={props.span}>{option.label}</span>\r\n      </label>\r\n    ));\r\n  };\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : props.element === \"radio\" ? (\r\n      <div className={props.className}>\r\n        <label className=\"radio-inputs__title\">{props.label}</label>\r\n        <hr />\r\n        {() => renderRadioOptions(props.radioOptions)}\r\n      </div>\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouch && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      {props.element !== \"radio\" && (\r\n        <label htmlFor={props.id}>{props.label}</label>\r\n      )}\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouch && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nimport \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\r\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\r\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\r\nconst VALIDATOR_TYPE_MIN = \"MIN\";\r\nconst VALIDATOR_TYPE_MAX = \"MAX\";\r\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\r\nconst VALIDATOR_TYPE_FILE = \"FILE\";\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MAXLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators = []) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n"],"names":["props","_jsx","className","children","src","image","alt","style","width","height","UsersProfile","showConfirm","setShowConfirm","useState","showOldPassword","setShowOldPassword","showNewPassword","setShowNewPassword","auth","useContext","AuthContext","userId","useParams","isLoading","error","sendRequest","errorHandler","useHttpClient","profile","setProfile","formState","inputHandler","setFormData","useForm","name","value","isValid","email","oldPassword","newPassword","updateUser","useEffect","token","async","userData","process","concat","Authorization","Error","err","console","fetchProfile","hasToken","trustLevel","taskCount","totalTasksCount","level","color","_jsxs","Card","_Fragment","Modal","show","header","footer","Button","inverse","onClick","closeConfirmHandler","ErrorModal","onClear","LoadingSpinner","backgroundColor","FaUserShield","Avatar","undefined","FaTasks","FaUserFriends","createdTasksCount","FaChartLine","assignedTasksCount","onSubmit","event","preventDefault","formData","inputs","JSON","stringify","_objectSpread","Input","id","element","label","validators","VALIDATOR_REQUIRE","onInput","initialValue","initialValid","type","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","errorText","toggleOldPasswordVisibility","FaEyeSlash","FaEye","toggleNewPasswordVisibility","openConfirmHandler","disabled","logout","formReducer","state","action","formIsValid","inputId","initialInputs","initialFormValidity","dispatch","useReducer","useCallback","inputData","formIsValidity","inputReducer","val","validate","isTouch","inputState","changeHandler","target","touchHandler","renderRadioOptions","radioOptions","map","option","checked","onChange","radioChangeHandler","selectedValue","onBlur","span","placeholder","rows","htmlFor","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","arguments","length","validator","trim","test"],"sourceRoot":""}