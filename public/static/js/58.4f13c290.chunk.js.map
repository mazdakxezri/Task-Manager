{"version":3,"file":"static/js/58.4f13c290.chunk.js","mappings":"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","sources":["shared/components/UIElements/ImageUpload.js","users/pages/Auth.js","shared/Hooks/form-hook.js","shared/components/UIElements/Input.js","shared/components/UIElements/Card.js","shared/util/validators.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nimport \"./ImageUpload.css\";\r\nimport Button from \"./Button\";\r\n\r\nconst ImageUpload = ({ id, center, onInput, errorText, className }) => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState();\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedImageHandler = (event) => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n\r\n    onInput(id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control__image\">\r\n      <input\r\n        id={id}\r\n        ref={filePickerRef}\r\n        type=\"file\"\r\n        style={{ display: \"none\" }}\r\n        accept=\".jpg, .png, .jpeg\"\r\n        onChange={pickedImageHandler}\r\n      />\r\n      <div className={`image-upload ${center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick an image</p>}\r\n        </div>\r\n        <Button\r\n          className=\"form-control__button\"\r\n          type=\"button\"\r\n          onClick={pickImageHandler}\r\n        >\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  FaCheckCircle,\r\n  FaTasks,\r\n  FaUsers,\r\n  FaChartLine,\r\n  FaEye,\r\n  FaEyeSlash,\r\n} from \"react-icons/fa\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Button from \"../../shared/components/UIElements/Button\";\r\nimport Input from \"../../shared/components/UIElements/Input\";\r\nimport ImageUpload from \"../../shared/components/UIElements/ImageUpload\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/util/validators\";\r\nimport { useForm } from \"../../shared/Hooks/form-hook\";\r\nimport { useHttpClient } from \"../../shared/Hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport \"./Auth.css\";\r\n\r\nconst Auth = () => {\r\n  const auth = useContext(AuthContext);\r\n  const [isLoginMode, setIsLoginMode] = useState(false);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const { isLoading, error, sendRequest, errorHandler } = useHttpClient();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      email: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n  const navigate = useNavigate();\r\n\r\n  const switchHandler = () => {\r\n    if (!isLoginMode) {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: undefined,\r\n          image: undefined,\r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    } else {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: {\r\n            value: \"\",\r\n            isValid: false,\r\n          },\r\n          image: {\r\n            value: null,\r\n            isValid: false,\r\n          },\r\n        },\r\n        false\r\n      );\r\n    }\r\n\r\n    setIsLoginMode((prevMode) => !prevMode);\r\n  };\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const sumbitAuthHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (isLoginMode) {\r\n      try {\r\n        const data = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + \"/users/login\",\r\n          \"POST\",\r\n          JSON.stringify({\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n\r\n        auth.login(data.userId, data.token);\r\n        navigate(\"/\");\r\n      } catch (error) {}\r\n    } else {\r\n      try {\r\n        const formData = new FormData();\r\n\r\n        formData.append(\"email\", formState.inputs.email.value);\r\n        formData.append(\"name\", formState.inputs.name.value);\r\n        formData.append(\"password\", formState.inputs.password.value);\r\n        formData.append(\"image\", formState.inputs.image.value);\r\n\r\n        const data = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + \"/users/signup\",\r\n          \"POST\",\r\n          formData\r\n        );\r\n\r\n        auth.login(data.userId, data.token);\r\n        navigate(\"/\");\r\n      } catch (error) {}\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <ErrorModal error={error} onClear={errorHandler} />\r\n      <div className=\"auth-content\">\r\n        <div className=\"auth-notes\">\r\n          <h2>{isLoginMode ? \"Welcome Back!\" : \"Join Our Community\"}</h2>\r\n          <h3>\r\n            {isLoginMode ? \"Login to Your Account\" : \"Create Your Account\"}\r\n          </h3>\r\n          <p>\r\n            {isLoginMode\r\n              ? \"Access your tasks, track your progress, and stay organized with our powerful task management tools.\"\r\n              : \"Start your journey to better productivity. Create an account to access all features and begin organizing your tasks effectively.\"}\r\n          </p>\r\n\r\n          <div className=\"auth-features\">\r\n            <h4>Key Features:</h4>\r\n            <ul>\r\n              <li>\r\n                <FaTasks /> Smart Task Management\r\n              </li>\r\n              <li>\r\n                <FaUsers /> Team Collaboration\r\n              </li>\r\n              <li>\r\n                <FaChartLine /> Progress Tracking\r\n              </li>\r\n              <li>\r\n                <FaCheckCircle /> Achievement System\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        <Card className=\"auth\">\r\n          {isLoading && <LoadingSpinner />}\r\n          <h2 className=\"auth-header\">\r\n            {isLoginMode ? \"Sign In\" : \"Create Account\"}\r\n          </h2>\r\n\r\n          <form onSubmit={sumbitAuthHandler}>\r\n            {!isLoginMode && (\r\n              <>\r\n                <Input\r\n                  id=\"name\"\r\n                  element=\"input\"\r\n                  label=\"Name\"\r\n                  type=\"text\"\r\n                  errorText=\"Please enter a name.\"\r\n                  validators={[VALIDATOR_REQUIRE()]}\r\n                  onInput={inputHandler}\r\n                  placeholder=\"Enter your full name\"\r\n                />\r\n\r\n                <ImageUpload\r\n                  center\r\n                  id=\"image\"\r\n                  onInput={inputHandler}\r\n                  errorText=\"Please provide an image\"\r\n                />\r\n              </>\r\n            )}\r\n            <Input\r\n              id=\"email\"\r\n              element=\"input\"\r\n              label=\"E-mail\"\r\n              type=\"email\"\r\n              errorText=\"Please enter a valid email address.\"\r\n              validators={[VALIDATOR_EMAIL()]}\r\n              onInput={inputHandler}\r\n              placeholder=\"Enter your email address\"\r\n            />\r\n            <div className=\"password-input-container\">\r\n              <Input\r\n                id=\"password\"\r\n                element=\"input\"\r\n                label=\"Password\"\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                errorText=\"Please enter a valid password, at least 6 characters.\"\r\n                validators={[VALIDATOR_MINLENGTH(6)]}\r\n                onInput={inputHandler}\r\n                placeholder=\"Enter your password\"\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                className=\"password-toggle-auth\"\r\n                onClick={togglePasswordVisibility}\r\n              >\r\n                {showPassword ? <FaEyeSlash /> : <FaEye />}\r\n              </button>\r\n            </div>\r\n\r\n            {/* Forgot Password Link */}\r\n            {isLoginMode && (\r\n              <div className=\"forgot-password-link\">\r\n                <a href=\"/forgot-password\">Forgot Password?</a>\r\n              </div>\r\n            )}\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"auth__button\"\r\n              disabled={!formState.isValid}\r\n            >\r\n              {isLoginMode ? \"Sign In\" : \"Create Account\"}\r\n            </Button>\r\n          </form>\r\n\r\n          <Button className=\"switch__button\" onClick={switchHandler}>\r\n            {isLoginMode\r\n              ? \"Need an account? Sign Up\"\r\n              : \"Already have an account? Sign In\"}\r\n          </Button>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import { useReducer, useCallback } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity,\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formIsValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formIsValidity,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n","import React, { useReducer, useEffect } from \"react\";\r\n\r\nimport { validate, VALIDATOR_REQUIRE } from \"../../util/validators\";\r\nimport \"./Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.isValid),\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouch: true,\r\n      };\r\n    case \"RADIO_CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, VALIDATOR_REQUIRE()),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || \"\",\r\n    isTouch: false,\r\n    isValid: props.initialValid || false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    if (typeof onInput === \"function\") {\r\n      onInput(id, value, isValid);\r\n    }\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: \"TOUCH\",\r\n    });\r\n  };\r\n\r\n  const radioChangeHandler = (selectedValue) => {\r\n    dispatch({\r\n      type: \"RADIO_CHANGE\",\r\n      value: selectedValue,\r\n    });\r\n  };\r\n\r\n  const renderRadioOptions = (radioOptions) => {\r\n    return radioOptions.map((option) => (\r\n      <label key={option.value} className={option.className}>\r\n        <input\r\n          type=\"radio\"\r\n          name={option.id}\r\n          value={option.value}\r\n          checked={value === option.value}\r\n          onChange={() => radioChangeHandler(option.value)}\r\n          onBlur={touchHandler}\r\n        />\r\n        <span className={props.span}>{option.label}</span>\r\n      </label>\r\n    ));\r\n  };\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : props.element === \"radio\" ? (\r\n      <div className={props.className}>\r\n        <label className=\"radio-inputs__title\">{props.label}</label>\r\n        <hr />\r\n        {() => renderRadioOptions(props.radioOptions)}\r\n      </div>\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouch && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      {props.element !== \"radio\" && (\r\n        <label htmlFor={props.id}>{props.label}</label>\r\n      )}\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouch && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nimport \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\r\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\r\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\r\nconst VALIDATOR_TYPE_MIN = \"MIN\";\r\nconst VALIDATOR_TYPE_MAX = \"MAX\";\r\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\r\nconst VALIDATOR_TYPE_FILE = \"FILE\";\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MAXLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators = []) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n"],"names":["_ref","id","center","onInput","errorText","className","file","setFile","useState","previewUrl","setPreviewUrl","isValid","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","_jsxs","children","_jsx","ref","type","style","display","accept","onChange","event","pickedFile","fileIsValid","target","files","length","concat","src","alt","Button","onClick","pickImageHandler","current","click","Auth","auth","useContext","AuthContext","isLoginMode","setIsLoginMode","showPassword","setShowPassword","isLoading","error","sendRequest","errorHandler","useHttpClient","formState","inputHandler","setFormData","useForm","email","value","password","navigate","useNavigate","ErrorModal","onClear","FaTasks","FaUsers","FaChartLine","FaCheckCircle","Card","LoadingSpinner","onSubmit","async","preventDefault","data","process","JSON","stringify","inputs","login","userId","token","formData","FormData","append","name","image","_Fragment","Input","element","label","validators","VALIDATOR_REQUIRE","placeholder","ImageUpload","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","togglePasswordVisibility","FaEyeSlash","FaEye","href","disabled","switchHandler","_objectSpread","undefined","prevMode","formReducer","state","action","formIsValid","inputId","initialInputs","initialFormValidity","dispatch","useReducer","useCallback","inputData","formIsValidity","inputReducer","val","validate","isTouch","props","inputState","initialValue","initialValid","changeHandler","touchHandler","renderRadioOptions","radioOptions","map","option","checked","radioChangeHandler","selectedValue","onBlur","span","rows","htmlFor","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","arguments","validator","trim","test"],"sourceRoot":""}