{"version":3,"file":"static/js/522.99f0bb36.chunk.js","mappings":"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","sources":["tasks/pages/UpdateTask.js","shared/Hooks/form-hook.js","shared/components/UIElements/Input.js","shared/components/UIElements/Card.js","shared/util/validators.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { FaEdit, FaCalendarAlt, FaClock, FaStickyNote } from \"react-icons/fa\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Input from \"../../shared/components/UIElements/Input\";\r\nimport { useForm } from \"../../shared/Hooks/form-hook\";\r\nimport {\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/util/validators\";\r\nimport Button from \"../../shared/components/UIElements/Button\";\r\nimport { useHttpClient } from \"../../shared/Hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport \"./UpdateTask.css\";\r\n\r\nconst UpdateTask = () => {\r\n  const auth = useContext(AuthContext);\r\n  const [loadedTask, setLoadedTask] = useState();\r\n  const taskId = useParams().taskId;\r\n\r\n  const { isLoading, error, sendRequest, errorHandler } = useHttpClient();\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      dueDate: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      timeline: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      notes: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchTask = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + `/tasks/${taskId}`,\r\n          \"GET\",\r\n          null,\r\n          {\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n\r\n        if (!responseData) {\r\n          throw new Error(\"No task data received\");\r\n        }\r\n\r\n        setLoadedTask(responseData);\r\n\r\n        const formattedDate = new Date(responseData.dueDate)\r\n          .toISOString()\r\n          .split(\"T\")[0];\r\n\r\n        setFormData(\r\n          {\r\n            dueDate: {\r\n              value: formattedDate,\r\n              isValid: true,\r\n            },\r\n            timeline: {\r\n              value: responseData.timeline || \"\",\r\n              isValid: true,\r\n            },\r\n            notes: {\r\n              value: responseData.notes || \"\",\r\n              isValid: true,\r\n            },\r\n          },\r\n          true\r\n        );\r\n      } catch (error) {\r\n        console.error(\"Error fetching task:\", error);\r\n      }\r\n    };\r\n    fetchTask();\r\n  }, [sendRequest, taskId, setFormData, auth.token]);\r\n\r\n  const taskUpdateSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const updateData = {\r\n        dueDate: formState.inputs.dueDate.value,\r\n        timeline: formState.inputs.timeline.value,\r\n        notes: formState.inputs.notes.value,\r\n      };\r\n\r\n      const responseData = await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + `/tasks/${taskId}`,\r\n        \"PATCH\",\r\n        JSON.stringify(updateData),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n\r\n      if (responseData) {\r\n        navigate(`/user/${auth.userId}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating task:\", error);\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"center\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!loadedTask) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>Could not find task!</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"update-task-page\">\r\n      <div className=\"update-task-container\">\r\n        <div className=\"update-task-header\">\r\n          <FaEdit className=\"update-task-icon\" />\r\n          <h2>Update Your Task</h2>\r\n          <p>\r\n            Modify your task details to keep your workflow organized and\r\n            efficient.\r\n          </p>\r\n        </div>\r\n        <ErrorModal error={error} onClear={errorHandler} />\r\n        {!isLoading && loadedTask && (\r\n          <form className=\"update-task-form\" onSubmit={taskUpdateSubmitHandler}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"dueDate\">\r\n                <FaCalendarAlt className=\"input-icon\" />\r\n                Due Date\r\n              </label>\r\n              <Input\r\n                id=\"dueDate\"\r\n                element=\"input\"\r\n                type=\"date\"\r\n                errorText=\"Please enter a date.\"\r\n                validators={[VALIDATOR_REQUIRE()]}\r\n                onInput={inputHandler}\r\n                initialValue={\r\n                  loadedTask.dueDate\r\n                    ? new Date(loadedTask.dueDate).toISOString().split(\"T\")[0]\r\n                    : \"\"\r\n                }\r\n                initialValid={true}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"timeline\">\r\n                <FaClock className=\"input-icon\" />\r\n                Timeline\r\n              </label>\r\n              <Input\r\n                id=\"timeline\"\r\n                element=\"input\"\r\n                type=\"text\"\r\n                errorText=\"Please enter a timeline.\"\r\n                validators={[VALIDATOR_REQUIRE()]}\r\n                onInput={inputHandler}\r\n                initialValue={loadedTask.timeline || \"\"}\r\n                initialValid={true}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"notes\">\r\n                <FaStickyNote className=\"input-icon\" />\r\n                Notes\r\n              </label>\r\n              <Input\r\n                id=\"notes\"\r\n                element=\"textarea\"\r\n                type=\"text\"\r\n                errorText=\"Please enter notes (minimum 5 characters).\"\r\n                validators={[VALIDATOR_MINLENGTH(5)]}\r\n                onInput={inputHandler}\r\n                initialValue={loadedTask.notes || \"\"}\r\n                initialValid={true}\r\n              />\r\n            </div>\r\n            <Button type=\"submit\" disabled={!formState.isValid}>\r\n              Update Task\r\n            </Button>\r\n          </form>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateTask;\r\n","import { useReducer, useCallback } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity,\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formIsValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formIsValidity,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n","import React, { useReducer, useEffect } from \"react\";\r\n\r\nimport { validate, VALIDATOR_REQUIRE } from \"../../util/validators\";\r\nimport \"./Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.isValid),\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouch: true,\r\n      };\r\n    case \"RADIO_CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, VALIDATOR_REQUIRE()),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || \"\",\r\n    isTouch: false,\r\n    isValid: props.initialValid || false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    if (typeof onInput === \"function\") {\r\n      onInput(id, value, isValid);\r\n    }\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: \"TOUCH\",\r\n    });\r\n  };\r\n\r\n  const radioChangeHandler = (selectedValue) => {\r\n    dispatch({\r\n      type: \"RADIO_CHANGE\",\r\n      value: selectedValue,\r\n    });\r\n  };\r\n\r\n  const renderRadioOptions = (radioOptions) => {\r\n    return radioOptions.map((option) => (\r\n      <label key={option.value} className={option.className}>\r\n        <input\r\n          type=\"radio\"\r\n          name={option.id}\r\n          value={option.value}\r\n          checked={value === option.value}\r\n          onChange={() => radioChangeHandler(option.value)}\r\n          onBlur={touchHandler}\r\n        />\r\n        <span className={props.span}>{option.label}</span>\r\n      </label>\r\n    ));\r\n  };\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : props.element === \"radio\" ? (\r\n      <div className={props.className}>\r\n        <label className=\"radio-inputs__title\">{props.label}</label>\r\n        <hr />\r\n        {() => renderRadioOptions(props.radioOptions)}\r\n      </div>\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouch && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      {props.element !== \"radio\" && (\r\n        <label htmlFor={props.id}>{props.label}</label>\r\n      )}\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouch && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nimport \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\r\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\r\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\r\nconst VALIDATOR_TYPE_MIN = \"MIN\";\r\nconst VALIDATOR_TYPE_MAX = \"MAX\";\r\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\r\nconst VALIDATOR_TYPE_FILE = \"FILE\";\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MAXLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators = []) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n"],"names":["UpdateTask","auth","useContext","AuthContext","loadedTask","setLoadedTask","useState","taskId","useParams","isLoading","error","sendRequest","errorHandler","useHttpClient","formState","inputHandler","setFormData","useForm","dueDate","value","isValid","timeline","notes","navigate","useNavigate","useEffect","async","responseData","process","concat","Authorization","token","Error","formattedDate","Date","toISOString","split","console","fetchTask","_jsx","className","children","LoadingSpinner","_jsxs","FaEdit","ErrorModal","onClear","onSubmit","event","preventDefault","updateData","inputs","JSON","stringify","userId","htmlFor","FaCalendarAlt","Input","id","element","type","errorText","validators","VALIDATOR_REQUIRE","onInput","initialValue","initialValid","FaClock","FaStickyNote","VALIDATOR_MINLENGTH","Button","disabled","Card","formReducer","state","action","formIsValid","inputId","_objectSpread","initialInputs","initialFormValidity","dispatch","useReducer","useCallback","inputData","formIsValidity","inputReducer","val","validate","isTouch","props","inputState","changeHandler","target","touchHandler","renderRadioOptions","radioOptions","map","option","name","checked","onChange","radioChangeHandler","selectedValue","onBlur","span","label","placeholder","rows","style","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","arguments","length","undefined","validator","trim","test"],"sourceRoot":""}