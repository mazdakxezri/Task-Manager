{"version":3,"file":"static/js/32.4d986425.chunk.js","mappings":"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","sources":["users/pages/ForgotPassword.js","shared/Hooks/form-hook.js","shared/components/UIElements/Input.js","shared/components/UIElements/Card.js","shared/util/validators.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Button from \"../../shared/components/UIElements/Button\";\r\nimport Input from \"../../shared/components/UIElements/Input\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { VALIDATOR_EMAIL } from \"../../shared/util/validators\";\r\nimport { useForm } from \"../../shared/Hooks/form-hook\";\r\nimport { useHttpClient } from \"../../shared/Hooks/http-hook\";\r\nimport \"./Auth.css\";\r\n\r\nconst ForgotPassword = () => {\r\n  const [success, setSuccess] = useState(null);\r\n  const { isLoading, error, sendRequest, errorHandler } = useHttpClient();\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      email: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n  const navigate = useNavigate();\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await sendRequest(\r\n        \"/api/users/forgot-password\",\r\n        \"POST\",\r\n        JSON.stringify({ email: formState.inputs.email.value }),\r\n        { \"Content-Type\": \"application/json\" }\r\n      );\r\n      setSuccess(\r\n        \"If an account with that email exists, a password reset link has been sent.\"\r\n      );\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <ErrorModal error={error} onClear={errorHandler} />\r\n      <div className=\"auth-content\">\r\n        <Card className=\"auth\">\r\n          {isLoading && <LoadingSpinner />}\r\n          <h2 className=\"auth-header\">Forgot Password</h2>\r\n          {success ? (\r\n            <p style={{ color: \"green\", margin: \"1rem 0\" }}>{success}</p>\r\n          ) : (\r\n            <form onSubmit={submitHandler}>\r\n              <Input\r\n                id=\"email\"\r\n                element=\"input\"\r\n                label=\"E-mail\"\r\n                type=\"email\"\r\n                errorText=\"Please enter a valid email address.\"\r\n                validators={[VALIDATOR_EMAIL()]}\r\n                onInput={inputHandler}\r\n                placeholder=\"Enter your email address\"\r\n              />\r\n              <Button type=\"submit\" className=\"auth__button\" disabled={!formState.isValid}>\r\n                Send Reset Link\r\n              </Button>\r\n            </form>\r\n          )}\r\n          <Button className=\"switch__button\" onClick={() => navigate(\"/auth\")}>Back to Login</Button>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword; ","import { useReducer, useCallback } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity,\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formIsValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formIsValidity,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n","import React, { useReducer, useEffect } from \"react\";\r\n\r\nimport { validate, VALIDATOR_REQUIRE } from \"../../util/validators\";\r\nimport \"./Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.isValid),\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouch: true,\r\n      };\r\n    case \"RADIO_CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, VALIDATOR_REQUIRE()),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || \"\",\r\n    isTouch: false,\r\n    isValid: props.initialValid || false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    if (typeof onInput === \"function\") {\r\n      onInput(id, value, isValid);\r\n    }\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: \"TOUCH\",\r\n    });\r\n  };\r\n\r\n  const radioChangeHandler = (selectedValue) => {\r\n    dispatch({\r\n      type: \"RADIO_CHANGE\",\r\n      value: selectedValue,\r\n    });\r\n  };\r\n\r\n  const renderRadioOptions = (radioOptions) => {\r\n    return radioOptions.map((option) => (\r\n      <label key={option.value} className={option.className}>\r\n        <input\r\n          type=\"radio\"\r\n          name={option.id}\r\n          value={option.value}\r\n          checked={value === option.value}\r\n          onChange={() => radioChangeHandler(option.value)}\r\n          onBlur={touchHandler}\r\n        />\r\n        <span className={props.span}>{option.label}</span>\r\n      </label>\r\n    ));\r\n  };\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : props.element === \"radio\" ? (\r\n      <div className={props.className}>\r\n        <label className=\"radio-inputs__title\">{props.label}</label>\r\n        <hr />\r\n        {() => renderRadioOptions(props.radioOptions)}\r\n      </div>\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouch && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      {props.element !== \"radio\" && (\r\n        <label htmlFor={props.id}>{props.label}</label>\r\n      )}\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouch && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nimport \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\r\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\r\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\r\nconst VALIDATOR_TYPE_MIN = \"MIN\";\r\nconst VALIDATOR_TYPE_MAX = \"MAX\";\r\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\r\nconst VALIDATOR_TYPE_FILE = \"FILE\";\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MAXLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators = []) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n"],"names":["ForgotPassword","success","setSuccess","useState","isLoading","error","sendRequest","errorHandler","useHttpClient","formState","inputHandler","useForm","email","value","isValid","navigate","useNavigate","_jsxs","className","children","_jsx","ErrorModal","onClear","Card","LoadingSpinner","style","color","margin","onSubmit","async","e","preventDefault","JSON","stringify","inputs","err","Input","id","element","label","type","errorText","validators","VALIDATOR_EMAIL","onInput","placeholder","Button","disabled","onClick","formReducer","state","action","formIsValid","inputId","_objectSpread","initialInputs","initialFormValidity","dispatch","useReducer","useCallback","inputData","formIsValidity","inputReducer","val","validate","isTouch","VALIDATOR_REQUIRE","props","inputState","initialValue","initialValid","useEffect","changeHandler","event","target","touchHandler","renderRadioOptions","radioOptions","map","option","name","checked","onChange","radioChangeHandler","selectedValue","onBlur","span","rows","concat","htmlFor","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_MINLENGTH","arguments","length","undefined","validator","trim","test"],"sourceRoot":""}