{"version":3,"file":"static/js/34.fd27a701.chunk.js","mappings":"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","sources":["shared/components/UIElements/RadioInput.js","shared/components/UIElements/UserSelector.js","tasks/pages/NewTask.js","shared/Hooks/form-hook.js","shared/components/UIElements/Input.js","shared/components/UIElements/Card.js","shared/util/validators.js"],"sourcesContent":["import React from \"react\";\r\n\r\nimport \"./RadioInput.css\";\r\n\r\nconst RadioInput = ({ inputOptions, optionsName, onClick }) => {\r\n  return (\r\n    <div className=\"radio-inputs\">\r\n      <label className=\"radio-inputs__title\">{optionsName}</label>\r\n      <hr />\r\n      {inputOptions.map((option) => {\r\n        return (\r\n          <label key={option.id} className=\"radio\">\r\n            <input \r\n              type=\"radio\" \r\n              name={option.name} \r\n              value={option.value}\r\n              onChange={(e) => onClick(option.value, true)} \r\n            />\r\n            <span className={`radio-span ${option.className}`}>\r\n              {option.label}\r\n            </span>\r\n          </label>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RadioInput;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { FaSearch, FaTimes } from 'react-icons/fa';\r\nimport './UserSelector.css';\r\n\r\nconst UserSelector = ({ users, selectedUsers, onSelectUsers, label, multiple = false }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const dropdownRef = useRef(null);\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => document.removeEventListener('mousedown', handleClickOutside);\r\n  }, []);\r\n\r\n  const filteredUsers = users.filter(user => \r\n    !selectedUsers.some(selected => selected.id === user.id) &&\r\n    (user.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n     user.email.toLowerCase().includes(searchTerm.toLowerCase()))\r\n  );\r\n\r\n  const handleSelect = (user) => {\r\n    if (multiple) {\r\n      onSelectUsers([...selectedUsers, user]);\r\n    } else {\r\n      onSelectUsers([user]);\r\n    }\r\n    setSearchTerm('');\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const handleRemove = (userId) => {\r\n    onSelectUsers(selectedUsers.filter(user => user.id !== userId));\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-selector-container\">\r\n      {label && <label>{label}</label>}\r\n      \r\n      <div className=\"user-selector-input\">\r\n        <div className=\"input-wrapper\">\r\n          <FaSearch className=\"search-icon\" />\r\n          <input\r\n            ref={inputRef}\r\n            type=\"text\"\r\n            placeholder=\"Search users...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            onFocus={() => setIsOpen(true)}\r\n          />\r\n          {searchTerm && (\r\n            <button \r\n              className=\"clear-button\"\r\n              onClick={() => setSearchTerm('')}\r\n            >\r\n              <FaTimes />\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        {isOpen && (\r\n          <div className=\"user-selector-dropdown\" ref={dropdownRef}>\r\n            {filteredUsers.length > 0 ? (\r\n              filteredUsers.map(user => (\r\n                <div\r\n                  key={user.id}\r\n                  className=\"user-option\"\r\n                  onClick={() => handleSelect(user)}\r\n                >\r\n                  <img\r\n                    src={user.image || '/images/default-avatar.png'}\r\n                    alt={user.name}\r\n                    className=\"user-avatar\"\r\n                  />\r\n                  <div className=\"user-info\">\r\n                    <div className=\"user-name\">{user.name}</div>\r\n                    <div className=\"user-email\">{user.email}</div>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <div className=\"no-users-message\">\r\n                {searchTerm ? 'No users found' : 'Start typing to search users'}\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {selectedUsers.length > 0 && (\r\n        <div className=\"selected-users\">\r\n          {selectedUsers.map(user => (\r\n            <div key={user.id} className=\"selected-user\">\r\n              <img\r\n                src={user.image || '/images/default-avatar.png'}\r\n                alt={user.name}\r\n                className=\"user-avatar\"\r\n              />\r\n              <span>{user.name}</span>\r\n              <button onClick={() => handleRemove(user.id)}>\r\n                <FaTimes />\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserSelector;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { \r\n  FaTasks, \r\n  FaUserFriends, \r\n  FaCalendarAlt, \r\n  FaClock, \r\n  FaStickyNote, \r\n  FaExclamationCircle, \r\n  FaCheckCircle,\r\n  FaUser,\r\n  FaUsers,\r\n  FaListAlt,\r\n  FaCalendarCheck,\r\n  FaClipboardList,\r\n  FaUserPlus\r\n} from \"react-icons/fa\";\r\n\r\nimport Input from \"../../shared/components/UIElements/Input\";\r\nimport Button from \"../../shared/components/UIElements/Button\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport \"./NewTask.css\";\r\nimport {\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/util/validators\";\r\nimport { useForm } from \"../../shared/Hooks/form-hook\";\r\nimport RadioInput from \"../../shared/components/UIElements/RadioInput\";\r\nimport UserSelector from \"../../shared/components/UIElements/UserSelector\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/Hooks/http-hook\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\nconst NewTask = () => {\r\n  const auth = useContext(AuthContext);\r\n  const [role, setRole] = useState(\"member\");\r\n  const [groupName, setGroupName] = useState(\"\");\r\n  const [assignedUsers, setAssignedUsers] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  \r\n  const navigate = useNavigate();\r\n\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      dueDate: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      timeline: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      notes: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      priority: {\r\n        value: \"medium\",\r\n        isValid: true,\r\n      },\r\n      role: {\r\n        value: \"member\",\r\n        isValid: true,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const { isLoading, error, sendRequest, errorHandler } = useHttpClient();\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users`,\r\n          \"GET\",\r\n          null,\r\n          {\r\n            Authorization: \"Bearer \" + auth.token,\r\n          }\r\n        );\r\n        setUsers(responseData.users);\r\n      } catch (err) {}\r\n    };\r\n    fetchUsers();\r\n  }, [sendRequest, auth.token]);\r\n\r\n  const handleRoleChange = (value) => {\r\n    setRole(value);\r\n    inputHandler(\"role\", value, true);\r\n    if (value === \"member\") {\r\n      setGroupName(\"\");\r\n      setAssignedUsers([]);\r\n    }\r\n  };\r\n\r\n  const taskSubmitHandlerAsAdmin = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (role === \"admin\" && (!groupName || assignedUsers.length === 0)) {\r\n      throw new Error(\r\n        \"Group name and at least one assigned user are required for admin tasks\"\r\n      );\r\n    }\r\n\r\n    try {\r\n      let adminTaskData;\r\n      if (role === \"admin\") {\r\n        adminTaskData = {\r\n          title: formState.inputs.title.value,\r\n          description: formState.inputs.description.value,\r\n          priority: formState.inputs.priority.value,\r\n          dueDate: formState.inputs.dueDate.value,\r\n          timeline: formState.inputs.timeline.value,\r\n          notes: formState.inputs.notes.value,\r\n          role: role,\r\n          groupName: groupName,\r\n          assignedUsers: assignedUsers,\r\n        };\r\n      }\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + \"/tasks/admin\",\r\n        \"POST\",\r\n        JSON.stringify(adminTaskData),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      navigate(\"/user/:uid\");\r\n    } catch (error) {}\r\n  };\r\n\r\n  const taskSubmitHandlerAsMember = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const taskData = {\r\n        title: formState.inputs.title.value,\r\n        description: formState.inputs.description.value,\r\n        priority: formState.inputs.priority.value,\r\n        dueDate: formState.inputs.dueDate.value,\r\n        timeline: formState.inputs.timeline.value,\r\n        notes: formState.inputs.notes.value,\r\n        role: role,\r\n      };\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + \"/tasks/member\",\r\n        \"POST\",\r\n        JSON.stringify(taskData),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n\r\n      navigate(\"/user/:uid\");\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClear={errorHandler} />\r\n      <div className=\"newtask-container\">\r\n        <div className=\"newtask-content\">\r\n          <div className=\"task-guidance\">\r\n            <h2>Create New Task</h2>\r\n            <p className=\"guidance-subtitle\">Organize your work efficiently</p>\r\n            \r\n            <div className=\"guidance-cards\">\r\n              <div className=\"guidance-card\">\r\n                <FaTasks className=\"guidance-icon\" />\r\n                <h3>Task Details</h3>\r\n                <p>Provide a clear title and detailed description to help everyone understand the task requirements.</p>\r\n              </div>\r\n              \r\n              <div className=\"guidance-card\">\r\n                <FaCalendarAlt className=\"guidance-icon\" />\r\n                <h3>Timeline</h3>\r\n                <p>Set realistic deadlines and timelines to keep your project on track.</p>\r\n              </div>\r\n              \r\n              <div className=\"guidance-card\">\r\n                <FaExclamationCircle className=\"guidance-icon\" />\r\n                <h3>Priority</h3>\r\n                <p>Choose the appropriate priority level to help team members focus on what matters most.</p>\r\n              </div>\r\n            </div>\r\n\r\n            {role === \"admin\" && (\r\n              <div className=\"admin-guidance\">\r\n                <h3><FaUserFriends /> Admin Features</h3>\r\n                <ul>\r\n                  <li><FaUserPlus /> Assign tasks to team members</li>\r\n                  <li><FaCheckCircle /> Create task groups for better organization</li>\r\n                  <li><FaStickyNote /> Add detailed notes and instructions</li>\r\n                </ul>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <Card className=\"newTask-form\">\r\n            <form\r\n              onSubmit={\r\n                role === \"admin\"\r\n                  ? taskSubmitHandlerAsAdmin\r\n                  : taskSubmitHandlerAsMember\r\n              }\r\n            >\r\n              {isLoading && <LoadingSpinner />}\r\n              \r\n              <div className=\"form-section role-selector\">\r\n                <h3><FaUser /> Select Your Role</h3>\r\n                <RadioInput\r\n                  inputOptions={[\r\n                    {\r\n                      id: \"op4\",\r\n                      label: \"Admin\",\r\n                      value: \"admin\",\r\n                      name: \"radio1\",\r\n                      className: \"admin\",\r\n                    },\r\n                    {\r\n                      id: \"op5\",\r\n                      label: \"Member\",\r\n                      value: \"member\",\r\n                      name: \"radio1\",\r\n                      className: \"member\",\r\n                    },\r\n                  ]}\r\n                  optionsName=\"Role\"\r\n                  onClick={handleRoleChange}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-section\">\r\n                <h3><FaListAlt /> Task Information</h3>\r\n                <Input\r\n                  id=\"title\"\r\n                  element=\"input\"\r\n                  label=\"Title\"\r\n                  type=\"text\"\r\n                  errorText=\"Please enter a title.\"\r\n                  validators={[VALIDATOR_REQUIRE()]}\r\n                  onInput={inputHandler}\r\n                  placeholder=\"Enter task title\"\r\n                />\r\n                <Input\r\n                  id=\"description\"\r\n                  element=\"textarea\"\r\n                  label=\"Description\"\r\n                  errorText=\"Please enter a valid description (at least 6 characters).\"\r\n                  validators={[VALIDATOR_MINLENGTH(6)]}\r\n                  onInput={inputHandler}\r\n                  placeholder=\"Describe the task in detail\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-section\">\r\n                <h3><FaCalendarCheck /> Priority & Timeline</h3>\r\n                <RadioInput\r\n                  inputOptions={[\r\n                    {\r\n                      id: \"op1\",\r\n                      label: \"Low\",\r\n                      value: \"low\",\r\n                      name: \"radio\",\r\n                      className: \"low\",\r\n                    },\r\n                    {\r\n                      id: \"op2\",\r\n                      label: \"Medium\",\r\n                      value: \"medium\",\r\n                      name: \"radio\",\r\n                      className: \"medium\",\r\n                    },\r\n                    {\r\n                      id: \"op3\",\r\n                      label: \"High\",\r\n                      value: \"high\",\r\n                      name: \"radio\",\r\n                      className: \"high\",\r\n                    },\r\n                  ]}\r\n                  optionsName=\"Priority\"\r\n                  onClick={(value) => inputHandler(\"priority\", value, !!value)}\r\n                />\r\n                <Input\r\n                  id=\"dueDate\"\r\n                  element=\"input\"\r\n                  label=\"Due Date\"\r\n                  type=\"date\"\r\n                  errorText=\"Please enter a date.\"\r\n                  validators={[VALIDATOR_REQUIRE()]}\r\n                  onInput={inputHandler}\r\n                />\r\n                <Input\r\n                  id=\"timeline\"\r\n                  element=\"input\"\r\n                  label=\"Timeline\"\r\n                  type=\"text\"\r\n                  errorText=\"Please enter a timeline.\"\r\n                  validators={[VALIDATOR_REQUIRE()]}\r\n                  onInput={inputHandler}\r\n                  placeholder=\"e.g., 2 weeks, 1 month\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-section\">\r\n                <h3><FaClipboardList /> Additional Information</h3>\r\n                <Input\r\n                  id=\"notes\"\r\n                  element=\"textarea\"\r\n                  label=\"Notes\"\r\n                  errorText=\"Please enter notes (at least 5 characters).\"\r\n                  validators={[VALIDATOR_MINLENGTH(5)]}\r\n                  onInput={inputHandler}\r\n                  placeholder=\"Add any additional notes or instructions\"\r\n                />\r\n              </div>\r\n\r\n              {role === \"admin\" && (\r\n                <div className=\"form-section admin-section\">\r\n                  <h3><FaUsers /> Team Assignment</h3>\r\n                  <Input\r\n                    id=\"groupName\"\r\n                    element=\"input\"\r\n                    label=\"Group Name\"\r\n                    type=\"text\"\r\n                    value={groupName}\r\n                    errorText=\"Please enter a group name.\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    onInput={(id, value, isValid) => setGroupName(value)}\r\n                    placeholder=\"Enter group name\"\r\n                  />\r\n                  <div className=\"user-selector-container\">\r\n                    <UserSelector\r\n                      users={users}\r\n                      selectedUsers={assignedUsers}\r\n                      onSelectUsers={setAssignedUsers}\r\n                      label=\"Assign to Users\"\r\n                      multiple={true}\r\n                    />\r\n                    {assignedUsers.length > 0 && (\r\n                      <div className=\"selected-users\">\r\n                        {assignedUsers.map(user => (\r\n                          <div key={user.id} className=\"selected-user\">\r\n                            <span>{user.name}</span>\r\n                            <button onClick={() => setAssignedUsers(prev => prev.filter(u => u.id !== user.id))}>\r\n                              ×\r\n                            </button>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                disabled={\r\n                  !formState.isValid ||\r\n                  (role === \"admin\" && (!groupName || assignedUsers.length === 0))\r\n                }\r\n              >\r\n                Create Task\r\n              </Button>\r\n            </form>\r\n          </Card>\r\n\r\n          \r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewTask;\r\n","import { useReducer, useCallback } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity,\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formIsValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formIsValidity,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n","import React, { useReducer, useEffect } from \"react\";\r\n\r\nimport { validate, VALIDATOR_REQUIRE } from \"../../util/validators\";\r\nimport \"./Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.isValid),\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouch: true,\r\n      };\r\n    case \"RADIO_CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, VALIDATOR_REQUIRE()),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || \"\",\r\n    isTouch: false,\r\n    isValid: props.initialValid || false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    if (typeof onInput === \"function\") {\r\n      onInput(id, value, isValid);\r\n    }\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: \"TOUCH\",\r\n    });\r\n  };\r\n\r\n  const radioChangeHandler = (selectedValue) => {\r\n    dispatch({\r\n      type: \"RADIO_CHANGE\",\r\n      value: selectedValue,\r\n    });\r\n  };\r\n\r\n  const renderRadioOptions = (radioOptions) => {\r\n    return radioOptions.map((option) => (\r\n      <label key={option.value} className={option.className}>\r\n        <input\r\n          type=\"radio\"\r\n          name={option.id}\r\n          value={option.value}\r\n          checked={value === option.value}\r\n          onChange={() => radioChangeHandler(option.value)}\r\n          onBlur={touchHandler}\r\n        />\r\n        <span className={props.span}>{option.label}</span>\r\n      </label>\r\n    ));\r\n  };\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : props.element === \"radio\" ? (\r\n      <div className={props.className}>\r\n        <label className=\"radio-inputs__title\">{props.label}</label>\r\n        <hr />\r\n        {() => renderRadioOptions(props.radioOptions)}\r\n      </div>\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouch && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      {props.element !== \"radio\" && (\r\n        <label htmlFor={props.id}>{props.label}</label>\r\n      )}\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouch && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nimport \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\r\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\r\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\r\nconst VALIDATOR_TYPE_MIN = \"MIN\";\r\nconst VALIDATOR_TYPE_MAX = \"MAX\";\r\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\r\nconst VALIDATOR_TYPE_FILE = \"FILE\";\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MAXLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators = []) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n"],"names":["_ref","inputOptions","optionsName","onClick","_jsxs","className","children","_jsx","map","option","type","name","value","onChange","e","concat","label","id","users","selectedUsers","onSelectUsers","multiple","isOpen","setIsOpen","useState","searchTerm","setSearchTerm","dropdownRef","useRef","inputRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","filteredUsers","filter","user","some","selected","toLowerCase","includes","email","FaSearch","ref","placeholder","onFocus","FaTimes","length","handleSelect","src","image","alt","handleRemove","userId","NewTask","auth","useContext","AuthContext","role","setRole","groupName","setGroupName","assignedUsers","setAssignedUsers","setUsers","navigate","useNavigate","formState","inputHandler","useForm","title","isValid","description","dueDate","timeline","notes","priority","isLoading","error","sendRequest","errorHandler","useHttpClient","async","responseData","process","Authorization","token","err","fetchUsers","_Fragment","ErrorModal","onClear","FaTasks","FaCalendarAlt","FaExclamationCircle","FaUserFriends","FaUserPlus","FaCheckCircle","FaStickyNote","Card","onSubmit","preventDefault","Error","adminTaskData","inputs","JSON","stringify","taskData","console","LoadingSpinner","FaUser","RadioInput","FaListAlt","Input","element","errorText","validators","VALIDATOR_REQUIRE","onInput","VALIDATOR_MINLENGTH","FaCalendarCheck","FaClipboardList","FaUsers","UserSelector","prev","u","Button","disabled","formReducer","state","action","formIsValid","inputId","_objectSpread","initialInputs","initialFormValidity","dispatch","useReducer","useCallback","inputData","formIsValidity","inputReducer","val","validate","isTouch","props","inputState","initialValue","initialValid","changeHandler","touchHandler","renderRadioOptions","radioOptions","checked","radioChangeHandler","selectedValue","onBlur","span","rows","htmlFor","style","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","arguments","undefined","validator","trim","test"],"sourceRoot":""}